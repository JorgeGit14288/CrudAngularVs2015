//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiRest.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestDbEntities : DbContext
    {
        public TestDbEntities()
            : base("name=TestDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Personas> Personas { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_Actualizar_Persona(Nullable<int> id, string correo, string pass, string nombre, string direccion, Nullable<System.DateTime> nacimiento, ObjectParameter retorno)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var nacimientoParameter = nacimiento.HasValue ?
                new ObjectParameter("nacimiento", nacimiento) :
                new ObjectParameter("nacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Actualizar_Persona", idParameter, correoParameter, passParameter, nombreParameter, direccionParameter, nacimientoParameter, retorno);
        }
    
        public virtual ObjectResult<sp_Buscar_Persona_Result> sp_Buscar_Persona(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Buscar_Persona_Result>("sp_Buscar_Persona", idParameter);
        }
    
        public virtual ObjectResult<string> sp_Crear_Persona(string correo, string pass, string nombre, string direccion, Nullable<System.DateTime> nacimiento, ObjectParameter retorno)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var nacimientoParameter = nacimiento.HasValue ?
                new ObjectParameter("nacimiento", nacimiento) :
                new ObjectParameter("nacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Crear_Persona", correoParameter, passParameter, nombreParameter, direccionParameter, nacimientoParameter, retorno);
        }
    
        public virtual int sp_Eliminar_Persona(Nullable<int> id, ObjectParameter retorno)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Eliminar_Persona", idParameter, retorno);
        }
    
        public virtual ObjectResult<sp_Listar_Result> sp_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Listar_Result>("sp_Listar");
        }
    }
}
